#
# Copyright (c) 2022 Gabriele Baldoni
#
# This program and the accompanying materials are made available under the
# Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: Apache-2.0
#
# Contributors:
#   Gabriele Baldoni, <gabriele@zettascale.tech>
#



---


- name: Create Container if not exists
  tags: create
  # the check cannot be done as plugin is missing listing containers
  # when: "vm_name not in existing_vms.list_vms"
  block:

    - name: generate container configuration (networks)
      set_fact:
        interfaces: "{{ interfaces|default({}) | combine( { 'eth'~item.0 : { 'type':'nic', 'network':item.1  } } ) }}"
      with_indexed_items: "{{ container_nets }}"

    - name: generate container configuration (disk)
      set_fact:
        devices:
          root:
            pool: default
            type: disk
            size: "{{ container_disk_gb }}GB"
            path: /

    - name: generate container configuration (merging)
      set_fact:
        devices: "{{ devices | combine(interfaces) }}"

    - name: create the container profile
      community.general.lxd_profile:
        name: "{{ container_name }}-profile"
        state: present
        config:
          limits.memory: "{{ container_vram_mb }}MB"
          limits.cpu: "{{ container_vcpus }}"
        devices: "{{ devices }}"


    - name: create the container
      community.general.lxd_container:
        name: "{{ container_name }}"
        ignore_volatile_options: true
        state: started
        source:
          type: image
          mode: pull
          server: "{{ images_server }}"
          protocol: "{{ image_protocol }}"
          alias: "{{ base_image_alias }}"
        profiles: ["{{ container_name }}-profile"]
        wait_for_container: true


    # - name: prepare container
    #   delegate_to: "{{ container_name }}"
    #   command: "dhclient"
